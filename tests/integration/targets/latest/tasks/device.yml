---
##
##
### PYNAUTOBOT_DEVICE
##
##
- set_fact:
    parent_location: "{{ lookup('networktocode.nautobot.lookup', 'locations', api_endpoint=nautobot_url, token=nautobot_token, api_filter='name=\"Parent Test Location\"') }}"
    child_location: "{{ lookup('networktocode.nautobot.lookup', 'locations', api_endpoint=nautobot_url, token=nautobot_token, api_filter='name=\"Child Test Location\" parent=\"Parent Test Location\"') }}"
    device_type: "{{ lookup('networktocode.nautobot.lookup', 'device-types', api_endpoint=nautobot_url, token=nautobot_token, api_filter='model=\"Cisco Test\"') }}"
    role: "{{ lookup('networktocode.nautobot.lookup', 'roles', api_endpoint=nautobot_url, token=nautobot_token, api_filter='name=\"Core Switch\"') }}"
    vc1: "{{ lookup('networktocode.nautobot.lookup', 'virtual-chassis', api_endpoint=nautobot_url, token=nautobot_token, api_filter='name=VC1') }}"
    staged: "{{ lookup('networktocode.nautobot.lookup', 'statuses', api_endpoint=nautobot_url, token=nautobot_token, api_filter='name=Staged') }}"
    device_redundancy_group: "{{ lookup('networktocode.nautobot.lookup', 'device-redundancy-groups', api_endpoint=nautobot_url, token=nautobot_token, api_filter='name=\"My Device Redundancy Group\"') }}"
    secrets_group_one: "{{ lookup('networktocode.nautobot.lookup', 'secrets-groups', api_endpoint=nautobot_url, token=nautobot_token, api_filter='name=\"Test Secrets Group\"') }}"
    secrets_group_two: "{{ lookup('networktocode.nautobot.lookup', 'secrets-groups', api_endpoint=nautobot_url, token=nautobot_token, api_filter='name=\"Test Secrets Group Two\"') }}"


- name: "1 - Device with required information"
  networktocode.nautobot.device:
    url: "{{ nautobot_url }}"
    token: "{{ nautobot_token }}"
    name: "R1"
    device_type:
      id: "{{ device_type['key'] }}"
    role: "Core Switch"
    location: Parent Test Location
    status: "Staged"
    state: present
  register: test_one

- name: "1 - ASSERT"
  assert:
    that:
      - test_one is changed
      - test_one['diff']['before']['state'] == 'absent'
      - test_one['diff']['after']['state'] == 'present'
      - test_one['device']['name'] == "R1"
      - test_one['device']['role'] == role['key']
      - test_one['device']['device_type'] == device_type['key']
      - test_one['device']['location'] == parent_location['key']
      - test_one['device']['status'] == staged['key']
      - test_one['device']['name'] == "R1"
      - test_one['msg'] == "device R1 created"

- name: "2 - Duplicate device"
  networktocode.nautobot.device:
    url: "{{ nautobot_url }}"
    token: "{{ nautobot_token }}"
    name: "R1"
    device_type: "Cisco Test"
    role: "Core Switch"
    location: Parent Test Location
    status: "Staged"
    state: present
  register: test_two

- name: "2 - ASSERT"
  assert:
    that:
      - not test_two['changed']
      - test_two['device']['name'] == "R1"
      - test_two['device']['role'] == role['key']
      - test_two['device']['device_type'] == device_type['key']
      - test_two['device']['location'] == parent_location['key']
      - test_two['device']['status'] == staged['key']
      - test_two['msg'] == "device R1 already exists"

- name: "3 - Update device"
  networktocode.nautobot.device:
    url: "{{ nautobot_url }}"
    token: "{{ nautobot_token }}"
    name: "R1"
    serial: "FXS1001"
    local_config_context_data:
      bgp_as: "65412"
    virtual_chassis: "VC1"
    vc_position: 3
    vc_priority: 15
    device_redundancy_group: "{{ device_redundancy_group['key'] }}"
    device_redundancy_group_priority: 10
    state: present
  register: test_three

- name: "3 - ASSERT"
  assert:
    that:
      - test_three is changed
      - test_three['diff']['after']['serial'] == "FXS1001"
      - test_three['diff']['after']['local_config_context_data']["bgp_as"] == "65412"
      - test_three['diff']['after']['virtual_chassis'] == vc1['key']
      - test_three['diff']['after']['vc_position'] == 3
      - test_three['diff']['after']['vc_priority'] == 15
      - test_three['device']['name'] == "R1"
      - test_three['device']['role'] == role['key']
      - test_three['device']['device_type'] == device_type['key']
      - test_three['device']['location'] == parent_location['key']
      - test_three['device']['status'] == staged['key']
      - test_three['device']['serial'] == "FXS1001"
      - test_three['device']['local_config_context_data']["bgp_as"] == "65412"
      - test_three['device']['virtual_chassis'] == vc1['key']
      - test_three['device']['vc_position'] == 3
      - test_three['device']['vc_priority'] == 15
      - test_three['device']['device_redundancy_group'] == device_redundancy_group['key']
      - test_three['device']['device_redundancy_group_priority'] == 10
      - test_three['msg'] == "device R1 updated"

- name: "3.1 - Update device status"
  networktocode.nautobot.device:
    url: "{{ nautobot_url }}"
    token: "{{ nautobot_token }}"
    name: "R1"
    status: "Active"
    state: present
  register: test_three_dot_one

- name: "3.1 - ASSERT"
  assert:
    that:
      - test_three_dot_one is changed
      - test_three_dot_one['diff']['after']['status'] == active['key']
      - test_three_dot_one['device']['name'] == "R1"
      - test_three_dot_one['device']['role'] == role['key']
      - test_three_dot_one['device']['device_type'] == device_type['key']
      - test_three_dot_one['device']['location'] == parent_location['key']
      - test_three_dot_one['device']['status'] == active['key']
      - test_three_dot_one['device']['serial'] == "FXS1001"
      - test_three_dot_one['device']['virtual_chassis'] == vc1['key']
      - test_three_dot_one['device']['vc_position'] == 3
      - test_three_dot_one['device']['vc_priority'] == 15
      - test_three_dot_one['msg'] == "device R1 updated"

- name: "3.2 - Update device name using query_params"
  networktocode.nautobot.device:
    url: "{{ nautobot_url }}"
    token: "{{ nautobot_token }}"
    name: "R1-changed-name"
    serial: "FXS1001"
    query_params:
      - serial
    state: present
  register: test_three_dot_two

- name: "3.2 - ASSERT"
  assert:
    that:
      - test_three_dot_two is changed
      - test_three_dot_two['diff']['after']['name'] == "R1-changed-name"
      - test_three_dot_two['device']['role'] == role['key']
      - test_three_dot_two['device']['device_type'] == device_type['key']
      - test_three_dot_two['device']['location'] == parent_location['key']
      - test_three_dot_two['device']['status'] == active['key']
      - test_three_dot_two['device']['serial'] == "FXS1001"
      - test_three_dot_two['msg'] == "device R1-changed-name updated"

- name: "3.21 - ASSERT"
  assert:
    that:
      - device['value']['local_config_context_data']["bgp_as"] == "65412"
  vars:
    device: "{{ lookup('networktocode.nautobot.lookup', 'devices', api_endpoint=nautobot_url, token=nautobot_token, api_filter='name=R1-changed-name') }}"

- name: "4 - Create device with tags and assign to rack"
  networktocode.nautobot.device:
    url: "{{ nautobot_url }}"
    token: "{{ nautobot_token }}"
    name: "TestR1"
    device_type: "1841"
    role: "Core Switch"
    location:
      name: "Child Test Location"
      parent: "Parent Test Location"
    rack: "Main Test Rack"
    status: "Active"
    controller_managed_device_group: "{{ 'controller_group_one' if nautobot_version is version('2.2', '>=') else omit }}" 
    position: 35
    face: "Front"
    tags:
      - "Schnozzberry"
    tenant: "Test Tenant"
    asset_tag: "1234"
    state: present
  register: test_four

- name: "4 - ASSERT"
  assert:
    that:
      - test_four is changed
      - test_four['diff']['before']['state'] == "absent"
      - test_four['diff']['after']['state'] == "present"
      - test_four['device']['name'] == "TestR1"
      - test_four['device']['role'] == role['key']
      - test_four['device']['device_type'] == type['key']
      - test_four['device']['location'] == child_location['key']
      - test_four['device']['status'] == active['key']
      - test_four['device']['rack'] == rack['key']
      - test_four['device']['tags'][0] == schnozzberry['key']
      - test_four['device']['tenant'] == tenant['key']
      - test_four['device']['asset_tag'] == '1234'
      - test_four['msg'] == "device TestR1 created"
  vars:
    rack: "{{ lookup('networktocode.nautobot.lookup', 'racks', api_endpoint=nautobot_url, token=nautobot_token, api_filter='name=\"Main Test Rack\"') }}"
    tenant: "{{ lookup('networktocode.nautobot.lookup', 'tenants', api_endpoint=nautobot_url, token=nautobot_token, api_filter='name=\"Test Tenant\"') }}"
    type: "{{ lookup('networktocode.nautobot.lookup', 'device-types', api_endpoint=nautobot_url, token=nautobot_token, api_filter='model=1841') }}"
    schnozzberry: "{{ lookup('networktocode.nautobot.lookup', 'tags', api_endpoint=nautobot_url, token=nautobot_token, api_filter='name=Schnozzberry') }}"

- name: "5 - Delete previous device"
  networktocode.nautobot.device:
    url: "{{ nautobot_url }}"
    token: "{{ nautobot_token }}"
    name: "TestR1"
    state: absent
  register: test_five

- name: "5 - ASSERT"
  assert:
    that:
      - test_five is changed
      - test_five['diff']['before']['state'] == "present"
      - test_five['diff']['after']['state'] == "absent"
      - test_five['msg'] == "device TestR1 deleted"

- name: "6 - Delete R1"
  networktocode.nautobot.device:
    url: "{{ nautobot_url }}"
    token: "{{ nautobot_token }}"
    name: "R1-changed-name"
    state: absent
  register: test_six

- name: "6 - ASSERT"
  assert:
    that:
      - test_six is changed
      - test_six['diff']['before']['state'] == "present"
      - test_six['diff']['after']['state'] == "absent"
      - test_six['msg'] == "device R1-changed-name deleted"

- name: "GRAB IP Address UUIDs for following tests"
  ansible.builtin.set_fact:
    ip4: "{{ lookup('networktocode.nautobot.lookup', 'ip-addresses', api_endpoint=nautobot_url, token=nautobot_token, api_filter='address=172.16.180.1/24') }}"
    ip6: "{{ lookup('networktocode.nautobot.lookup', 'ip-addresses', api_endpoint=nautobot_url, token=nautobot_token, api_filter='address=2001::1:1/64') }}"

- name: "7 - Add primary_ip4/6 to test100 with UUID and regular definition"
  networktocode.nautobot.device:
    url: "{{ nautobot_url }}"
    token: "{{ nautobot_token }}"
    name: "test100"
    # This will test the UUID for ip4
    primary_ip4: "{{ ip4['key'] }}"
    primary_ip6: "2001::1:1/64"
    state: present
  register: test_seven

- name: "7 - ASSERT"
  assert:
    that:
      - test_seven is changed
      - test_seven['diff']['after']['primary_ip4'] == ip4['key']
      - test_seven['diff']['after']['primary_ip6'] == ip6['key']
      - test_seven['device']['name'] == "test100"
      - test_seven['device']['role'] == role['key']
      - test_seven['device']['device_type'] == device_type['key']
      - test_seven['device']['location'] == child_location['key']
      - test_seven['device']['status'] == active['key']
      - test_seven['device']['primary_ip4'] == ip4['key']
      - test_seven['device']['primary_ip6'] == ip6['key']
      - test_seven['msg'] == "device test100 updated"

- name: "8 - Device with empty string name"
  networktocode.nautobot.device:
    url: "{{ nautobot_url }}"
    token: "{{ nautobot_token }}"
    name: ""
    device_type:
      id: "{{ device_type['key'] }}"
    role: "Core Switch"
    location: "Parent Test Location"
    status: "Staged"
    state: present
  register: test_eight

- name: "8 - ASSERT"
  assert:
    that:
      - test_eight is changed
      - test_eight['diff']['before']['state'] == 'absent'
      - test_eight['diff']['after']['state'] == 'present'
      - test_eight['device']['role'] == role['key']
      - test_eight['device']['device_type'] == device_type['key']
      - test_eight['device']['location'] == parent_location['key']
      - test_eight['device']['status'] == staged['key']
      - "'-' in test_eight['device']['name']"
      - "test_eight['device']['name'] | length == 36"

- name: "9 - Create Device with secrets group"
  networktocode.nautobot.device:
    url: "{{ nautobot_url }}"
    token: "{{ nautobot_token }}"
    name: "TopSecretDevice"
    device_type:
      id: "{{ device_type['key'] }}"
    role: "Core Switch"
    location: "Parent Test Location"
    secrets_group: "Test Secrets Group"
    status: "Staged"
    state: present
  register: test_nine

- name: "9 - ASSERT"
  assert:
    that:
      - test_nine is changed
      - test_nine['diff']['before']['state'] == 'absent'
      - test_nine['diff']['after']['state'] == 'present'
      - test_nine['device']['role'] == role['key']
      - test_nine['device']['device_type'] == device_type['key']
      - test_nine['device']['secrets_group'] == secrets_group_one['key']
      - test_nine['device']['location'] == parent_location['key']
      - test_nine['device']['status'] == staged['key']
      - test_nine['device']['name'] == "TopSecretDevice"

- name: "9.1 - Update Device with secrets group"
  networktocode.nautobot.device:
    url: "{{ nautobot_url }}"
    token: "{{ nautobot_token }}"
    name: "TopSecretDevice"
    secrets_group: "Test Secrets Group Two"
    state: present
  register: test_nine_dot_one

- name: "9.1 - ASSERT"
  assert:
    that:
      - test_nine_dot_one is changed
      - test_nine_dot_one['diff']['after']['secrets_group'] == secrets_group_two['key']
      - test_nine_dot_one['device']['name'] == "TopSecretDevice"
      - test_nine_dot_one['msg'] == "device TopSecretDevice updated"

- name: "10 - Create device without name"
  networktocode.nautobot.device:
    url: "{{ nautobot_url }}"
    token: "{{ nautobot_token }}"
    device_type: "Cisco Test 2"
    role: "Core Switch"
    location: Parent Test Location
    status: "Staged"
  register: test_ten

- name: "10 - ASSERT"
  assert:
    that:
      - test_ten is changed
      - test_ten['diff']['before']['state'] == 'absent'
      - test_ten['diff']['after']['state'] == 'present'
      - test_ten['device']['name'] == None
      - test_ten['msg'] == "device Unnamed device created"

- name: "11 - Duplicate create device without name"
  networktocode.nautobot.device:
    url: "{{ nautobot_url }}"
    token: "{{ nautobot_token }}"
    device_type: "Cisco Test 2"
    role: "Core Switch"
    location: Parent Test Location
    status: "Staged"
    state: present
  register: test_eleven

- name: "11 - ASSERT"
  assert:
    that:
      - not test_eleven['changed']
      - test_eleven['msg'] == "device Unnamed device already exists"

- name: "12 - Delete device by id"
  networktocode.nautobot.device:
    url: "{{ nautobot_url }}"
    token: "{{ nautobot_token }}"
    id: "{{ test_ten['device']['id'] }}"
    state: absent
  register: test_twelve

- name: "12 - ASSERT"
  assert:
    that:
      - test_twelve is changed
      - test_twelve['diff']['before']['state'] == 'present'
      - test_twelve['diff']['after']['state'] == 'absent'
      - "'deleted' in test_twelve['msg']"

- name: "NAUTOBOT 2.2+ DEVICE TESTS"
  when:
    - "nautobot_version is version('2.2', '>=')"
  block:
    - set_fact:
        device_software_version: "{{ lookup('networktocode.nautobot.lookup', 'software-versions', api_endpoint=nautobot_url, token=nautobot_token, api_filter='version=3.2.1 platform=\"Cisco IOS\"') }}"
        device_software_image_file_1: "{{ lookup('networktocode.nautobot.lookup', 'software-image-files', api_endpoint=nautobot_url, token=nautobot_token, api_filter='image_file_name=test_software_image_file.bin') }}"
        device_software_image_file_2: "{{ lookup('networktocode.nautobot.lookup', 'software-image-files', api_endpoint=nautobot_url, token=nautobot_token, api_filter='image_file_name=test_software_image_file_two.bin') }}"

    - name: "13 - Update device with software version"
      networktocode.nautobot.device:
        url: "{{ nautobot_url }}"
        token: "{{ nautobot_token }}"
        name: "TopSecretDevice"
        software_version:
          version: "3.2.1"
          platform: "Cisco IOS"
        software_image_files:
          - "test_software_image_file.bin"
          - "test_software_image_file_two.bin"
        state: present
      register: test_thirteen

    - name: "13 - ASSERT"
      assert:
        that:
          - test_thirteen is changed
          - test_thirteen['msg'] == "device TopSecretDevice updated"
          - test_thirteen['device']['software_version'] == device_software_version['key']
          - test_thirteen['device']['software_image_files'][0] == device_software_image_file_1['key']
          - test_thirteen['device']['software_image_files'][1] == device_software_image_file_2['key']

    - name: "14 - Duplicate device with software version"
      networktocode.nautobot.device:
        url: "{{ nautobot_url }}"
        token: "{{ nautobot_token }}"
        name: "TopSecretDevice"
        software_version:
          version: "3.2.1"
          platform: "Cisco IOS"
        software_image_files:
          - "test_software_image_file.bin"
          - "test_software_image_file_two.bin"
        state: present
      register: test_fourteen

    - name: "14 - ASSERT"
      assert:
        that:
          - not test_fourteen['changed']
          - test_fourteen['msg'] == "device TopSecretDevice already exists"
