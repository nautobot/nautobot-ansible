[tool.poetry]
name = "nautobot_ansible_modules"
version = "5.3.1"
description = "Ansible collection to interact with Nautobot's API"
authors = ["Network to Code <opensource@networktocode.com>"]
license = "Apache 2.0"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
netutils = "^1.2"
pynautobot = "^2.1.1"
ansible-core = "^2.16"

[tool.poetry.dev-dependencies]
black = "*"
coverage = "7.3.2"
cryptography = "*"
jinja2 = "*"
jmespath = "*"
jsondiff = "*"
pytest = "*"
pytest-mock = "*"
pytest-xdist = "*"
pyyaml = "*"
mock = "*"
importlib-metadata = "*"
pylint = "*"
sphinx_rtd_theme = "*"
hypothesis = "*"
pytest-pythonpath = "*"
parameterized = "*"
invoke = "*"
bandit = "*"
antsibull = "*"
antsibull-docs = "*"
pytest-forked = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
python_paths = "./"
addopts = "-vv"

[tool.black]
line-length = 160
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """,
    line-too-long
    """
